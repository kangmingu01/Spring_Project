<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:context="http://www.springframework.org/schema/context"
             xmlns:security="http://www.springframework.org/schema/security"
             xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
                                  http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
                                  http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
                                  http://www.springframework.org/schema/security https://www.springframework.org/schema/security/spring-security.xsd">

    <!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->

    <!-- Enables the Spring MVC @Controller programming model -->
    <annotation-driven/>

    <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
    <resources mapping="/resources/**" location="/resources/"/>
    <resources mapping="/images/**" location="/resources/images/"/>
    <resources mapping="/css/**" location="/resources/css/"/>
    <resources mapping="/js/**" location="/resources/js/"/>

    <!-- BeanNameViewResolver 클래스를 Spring Bean으로 등록 -->
    <!-- BeanNameViewResolver 객체 : 요청 처리 메소드의 반환값(ViewName)과 같은 이름을 식별자
    (beanName)의 객체로 메소드를 호출해 클라이언트에게 응답 처리하기 위한 기능을 제공하는 객체  -->
    <!-- => JSP 문서로 응답 처리하지 않고 클래스의 메소드를 호출해 응답 처리 -->
    <!-- => 다른 ViewResovler 객체보다 우선 순위가 높도록 설정 -->
    <beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
        <beans:property name="order" value="1"/>
    </beans:bean>

    <!-- UrlBasedViewResolver 클래스를 Spring Bean으로 등록 -->
    <!-- => UrlBasedViewResolver 객체 : 요청 처리 메소드의 반환값을 Spring 프레임워크에서 제공
    하는 ViewResolver 객체를 사용하지 않고 ViewResolver 기능의 클래스를 사용해 응답 처리하는
    기능을 제공하기 위한 ViewResolver 객체 -->
    <!-- => 뷰이름으로 응답 처리하기 위한 ViewResolver 객체를 커스터마이징(Customizing) 할 때 사용하는 객체 -->
    <beans:bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">
        <!-- viewClass 필드에 ViewResolver 기능을 제공하는 클래스가 저장되도록 값 주입 -->
        <beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView"/>
        <!-- order 필드에 ViewResolver 기능을 제공하는 클래스의 우선순위를 설정하기 위해 값(정수값) 주입 -->
        <!-- => ViewResolver 기능을 제공하는 클래스가 여러개 등록될 경우 반드시 설정 -->
        <!-- => 필드에 저장된 정수값이 작을수록 우선순위가 높게 설정되어 먼저 실행 -->
        <beans:property name="order" value="2"/>
    </beans:bean>

    <!-- TilesConfigurer 클래스를 Spring Bean으로 등록 -->
    <!-- => TilesConfigurer 객체 : 요청 처리 메소드의 반환값(ViewName)으로 응답 처리하기 위한
    정보가 저장된 환경설정파일을 제공하기 위한 객체 -->
    <beans:bean class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
        <!-- definitions 필드에 List 객체를 생성하여 저장되도록 의존성 주입 -->
        <!-- => List 객체의 요소에는 환경설정파일의 경로가 저장되도록 값 주입 -->
        <beans:property name="definitions">
            <beans:list>
                <beans:value>/WEB-INF/spring/appServlet/tiles.xml</beans:value>
            </beans:list>
        </beans:property>
    </beans:bean>

    <!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
    <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <beans:property name="prefix" value="/WEB-INF/views/"/>
        <beans:property name="suffix" value=".jsp"/>
        <beans:property name="order" value="3"/>
    </beans:bean>

    <!-- Controller Spring Bean으로 등록 -->
    <context:component-scan base-package="controller"/>
    <!-- Service Spring Bean으로 등록 -->
    <context:component-scan base-package="service"/>

    <security:global-method-security pre-post-annotations="enabled" secured-annotations="enabled"/>
</beans:beans>
