<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.ErpUserMapper">
    <!-- 사용자 추가 -->
    <insert id="insertErpUser">
        insert into erp_user values(
        #{userid}, #{passwd}, #{name}, #{phone}, #{address},
        #{email}, #{gender}, #{birthday}, #{joindate}, #{enabled}, #{orgId}
        )
    </insert>

    <!-- 사용자 정보 수정 -->
    <!-- 비번, 폰번호, 주소, 이메일, 계정상태, 부서만 수정가능하게 -->
    <update id="updateErpUser">
        update erp_user
        <set>
            <if test="passwd != null and passwd != ''">
                passwd = #{passwd},
            </if>
            <if test="phone != null and phone != ''">
                phone = #{phone},
            </if>
            <if test="address != null and address != ''">
                address = #{address},
            </if>
            <if test="email != null and email != ''">
                email = #{email},
            </if>
            <if test="enabled != null">
                enabled = #{enabled},
            </if>
            <if test="orgId != null and orgId != ''">
                org_id = #{orgId}
            </if>
        </set>
        where userid = #{userid}
    </update>

    <!-- 사용자 삭제 기능(enabled => 1에서 0으로) -->
    <update id="deleteErpUser">
        update erp_user
        <set>
            enabled = 0
        </set>
        where userid = #{userid}
    </update>

    <!-- 특정 회원정보를 검색할 수 있게 -->
    <resultMap id="erpUserResultMap" type="ErpUser">
        <id column="userid" property="userid"/>
        <result column="passwd" property="passwd"/>
        <result column="name" property="name"/>
        <result column="phone" property="phone"/>
        <result column="address" property="address"/>
        <result column="email" property="email"/>
        <result column="gender" property="gender"/>
        <result column="birthday" property="birthday"/>
        <result column="joindate" property="joindate"/>
        <result column="enabled" property="enabled"/>
        <result column="org_id" property="orgId"/>

        <!-- 사용자 권한 목록을 가져오기 위한 컬렉션 -->
        <collection property="erpAuthList" select="selectErpAuthByUserid" column="userid"/>
    </resultMap>

    <!-- 사용자 권한을 가져오는 쿼리 -->
    <select id="selectErpAuthByUserid" resultType="ErpAuth">
        SELECT userid, auth FROM erp_auth WHERE userid = #{userid}
    </select>

    <!-- 사용자 정보를 가져오는 쿼리 -->
    <select id="selectErpUserByUserid" resultMap="erpUserResultMap">
        SELECT userid, passwd, name, phone, address, email, gender, birthday, joindate, enabled, org_id
        FROM erp_user WHERE userid = #{userid}
    </select>

    <!-- 사용자 권한 추가 -->
    <insert id="insertErpAuth">
        insert into erp_auth values(#{userid}, #{auth})
    </insert>

    <!-- 유저 테이블의 리스트 전체 갯수를 가져오는 SQL -->
    <!-- 조건을 걸어 검색필드에 값이 있다면 해당 조건과 키워드에 맞게 갯수를 반환 -->
    <select id="selectUserCount" resultType="int">
        select count(*) from erp_user
        <if test="keyword != null and keyword != ''">
            <bind name="word" value="'%'+keyword+'%'"/>
            where ${column} like #{word}
        </if>
    </select>


    <!-- 페이징 처리된 게시판 리스트를 가져오는 SQL -->
    <!-- 키워드가 있다면 검색된 키워드의 게시판 리스트를 반환 -->
    <select id="selectUserList" resultType="ErpUser">
        select * from (
        select rownum rn, erp_user.*
        from (
        select userid, passwd, name, phone, address, email, gender, birthday, joindate, enabled, org_id
        from erp_user
        <if test="keyword != null and keyword != ''">
            <bind name="word" value="'%' + keyword + '%'"/>
            where ${column} like #{word}
        </if>
        order by joindate desc, name asc
        ) erp_user
        )
        where rn between #{startRow} and #{endRow}
    </select>

</mapper>